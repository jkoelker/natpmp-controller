---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: natpmps.network.natpmp.jkoelker.github.io
spec:
  group: network.natpmp.jkoelker.github.io
  names:
    kind: NatPMP
    listKind: NatPMPList
    plural: natpmps
    singular: natpmp
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: NatPMP is the Schema for the natpmps API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NatPMPSpec defines the desired state of NatPMP.
            properties:
              externalPort:
                description: ExternalPort is the requested external port number to
                  map.
                type: integer
              gateway:
                description: Gateway is the address or identifier of the NAT-PMP gateway.
                type: string
              internalPort:
                description: InternalPort is the internal port number that the external
                  port maps to.
                type: integer
              lifetime:
                description: Lifetime is the duration in seconds for which the port
                  mapping should be active.
                type: integer
              protocol:
                description: Protocol is the protocol for the port mapping (TCP/UDP).
                type: string
              templates:
                description: "Templates is the raw templates that will be used to
                  create or update resources via server-side apply. Each template
                  must be a valid Kubernetes YAML or JSON document. The templates
                  will be applied in order. The templates may reference the following
                  variables: \n * .Spec.ExternalPort * .Spec.InternalPort * .Spec.Protocol
                  * .Spec.Gateway * .Spec.Lifetime * .Status.ExternalIP * .Status.MappedInternalPort
                  * .Status.MappedExternalPort * .Status.MappedLifetime * .Status.SecondsSinceStartOfEpoch"
                items:
                  type: string
                type: array
            required:
            - externalPort
            - gateway
            - internalPort
            - lifetime
            - protocol
            - templates
            type: object
          status:
            description: NatPMPStatus defines the observed state of NatPMP.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the resource's state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              externalIP:
                description: ExternalIP is the external IP address of the gateway.
                type: string
              internalPort:
                description: MappedInternalPort is the internal port number that the
                  external port maps to.
                type: integer
              mappedExternalPort:
                description: MappedExternalPort is the external port number that was
                  successfully mapped.
                type: integer
              mappedLifetime:
                description: MappedLifetime is the duration in seconds for which the
                  port mapping will be active.
                type: integer
              secondsSinceStartOfEpoch:
                description: SecondsSinceStartOfEpoch is the number of seconds since
                  the start of the epoch.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
